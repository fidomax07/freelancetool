@using FreelanceTool.Models.Enums
@using Microsoft.AspNetCore.Mvc.Localization

@inject IViewLocalizer Localizer
@model ApplicationCreateViewModel

@{
	ViewData["Title"] = Localizer["Fill an application"];
}

<h2 class="body-title">@Localizer["Fill an application"]</h2>

<hr />
<div class="row">
	<div class="col-md-10 col-md-offset-1">
		<form asp-action="Create" enctype="multipart/form-data" id="applicant-create-form">
		
			@* Validation errors summary *@
			<div class="panel panel-danger" id="validation-summary-container" style="display: none;">
				<div class="panel-heading">
					<h3 class="panel-title">Model errors</h3>
				</div>
				<div asp-validation-summary="All" class="panel-body text-danger" id="validation-summary"></div>
			</div>

			@* Personal Data *@
			<div class="panel panel-primary" id="personal-data">
				<div class="panel-heading">
					<h3 class="panel-title">Personal Data</h3>
				</div>
				<div class="panel-body">
					<div class="form-group">
						<label asp-for="@Model.Applicant.Sex" class="control-label"></label>
						<select asp-for="@Model.Applicant.Sex"
								asp-items="Html.GetEnumSelectList<Sex>()"
								class="form-control">
							<option value="">(Please select)</option>
						</select>
						<span asp-validation-for="@Model.Applicant.Sex" class="text-danger"></span>
					</div>
					<div class="form-group">
						<label asp-for="@Model.Applicant.LastName" class="control-label"></label>
						<input asp-for="@Model.Applicant.LastName" class="form-control" placeholder="Doe" />
						<span asp-validation-for="@Model.Applicant.LastName" class="text-danger"></span>
					</div>
					<div class="form-group">
						<label asp-for="@Model.Applicant.FirstName" class="control-label"></label>
						<input asp-for="@Model.Applicant.FirstName" class="form-control" placeholder="John" />
						<span asp-validation-for="@Model.Applicant.FirstName" class="text-danger"></span>
					</div>
					<div class="form-group">
						<label asp-for="@Model.ApplicantDateOfBirth" class="control-label"></label>
						<input asp-for="@Model.ApplicantDateOfBirth" class="form-control" />
						<span asp-validation-for="@Model.ApplicantDateOfBirth" class="text-danger"></span>
					</div>
					<div class="form-group">
						<label asp-for="@Model.Applicant.MainLanguage" class="control-label"></label>
						<select asp-for="@Model.Applicant.LanguageId" class="form-control"
								asp-items="@Model.MainLanguageList"></select>
						<span asp-validation-for="@Model.Applicant.LanguageId" class="text-danger"></span>
					</div>
				</div>
			</div>

			@* Contact Data *@
			<div class="panel panel-primary" id="contact-data">
				<div class="panel-heading">
					<h3 class="panel-title">Contact Data</h3>
				</div>
				<div class="panel-body">
					<label asp-for="@Model.Applicant.PhoneNumber" class="control-label"></label>
					<div class="form-inline form-group-inline">
						<div class="form-group">
							<label asp-for="@Model.Applicant.PhonePrefix" class="sr-only"></label>
							<select asp-for="@Model.Applicant.PhonePrefix" class="form-control"
									asp-items="@Model.PhonePrefixesList"></select>
							<span asp-validation-for="@Model.Applicant.PhonePrefix" class="text-danger"></span>
						</div>
						<div class="form-group">
							<input asp-for="@Model.Applicant.PhoneNumber" class="form-control"
								   type="number" placeholder="676 45 23" />
							<span asp-validation-for="@Model.Applicant.PhoneNumber" class="text-danger"></span>
						</div>
					</div>
					<div class="form-group">
						<label asp-for="@Model.Applicant.Email" class="control-label"></label>
						<input asp-for="@Model.Applicant.Email" class="form-control" placeholder="johndoe@example.com" />
						<span asp-validation-for="@Model.Applicant.Email" class="text-danger"></span>
					</div>
				</div>
			</div>

			@* Address-Information *@
			<div class="panel panel-primary" id="address-information">
				<div class="panel-heading">
					<h3 class="panel-title">Address-Information</h3>
				</div>
				<div class="panel-body">
					<div class="form-group">
						<label asp-for="@Model.Applicant.Address" class="control-label"></label>
						<input asp-for="@Model.Applicant.Address" class="form-control" placeholder="Grand-Rue 24, 1204 Genève" />
						<span asp-validation-for="@Model.Applicant.Address" class="text-danger"></span>
					</div>
					<div class="form-group">
						<label asp-for="@Model.Applicant.AddressInformation" class="control-label"></label>
						<input asp-for="@Model.Applicant.AddressInformation" class="form-control" />
						<span asp-validation-for="@Model.Applicant.AddressInformation" class="text-danger"></span>
					</div>
					<div class="form-inline form-group-inline form-group-middle-inline">
						<div class="form-group">
							<label asp-for="@Model.Applicant.Zip" class="control-label"></label>
							<input asp-for="@Model.Applicant.Zip" class="form-control"
								   type="number" placeholder="1204" />
							<span asp-validation-for="@Model.Applicant.Zip" class="text-danger"></span>
						</div>
						<div class="form-group form-group-second-inline">
							<label asp-for="@Model.Applicant.City" class="control-label"></label>
							<input asp-for="@Model.Applicant.City" class="form-control" placeholder="Genève" />
							<span asp-validation-for="@Model.Applicant.City" class="text-danger"></span>
						</div>
					</div>
					<div class="form-group">
						<label asp-for="@Model.Applicant.Country" class="control-label"></label>
						<select asp-for="@Model.Applicant.Country" class="form-control"
								asp-items="Html.GetEnumSelectList<Country>()"></select>
						<span asp-validation-for="@Model.Applicant.Country" class="text-danger"></span>
					</div>
				</div>
			</div>

			@* Administrative Information *@
			<div class="panel panel-primary" id="administrative-information">
				<div class="panel-heading">
					<h3 class="panel-title">Administrative Information</h3>
				</div>
				<div class="panel-body">
					<div class="form-group">
						<label asp-for="@Model.Applicant.SwissSocialSecurityNumber" class="control-label"></label>
						<input asp-for="@Model.Applicant.SwissSocialSecurityNumber" class="form-control"
							   placeholder="678.7888.5677.89" />
						<span asp-validation-for="@Model.Applicant.SwissSocialSecurityNumber" class="text-danger"></span>
					</div>
					<div class="form-group">
						<label asp-for="@Model.Applicant.CivilStatus" class="control-label"></label>
						<select asp-for="@Model.Applicant.CivilStatus" class="form-control"
								asp-items="Html.GetEnumSelectList<CivilStatus>()"></select>
						<span asp-validation-for="@Model.Applicant.CivilStatus" class="text-danger"></span>
					</div>
					<div class="form-group">
						<label asp-for="@Model.Applicant.ChildrenCount" class="control-label"></label>
						<input asp-for="@Model.Applicant.ChildrenCount" class="form-control" />
						<span asp-validation-for="@Model.Applicant.ChildrenCount" class="text-danger"></span>
					</div>
					<div class="form-group">
						<label asp-for="@Model.Applicant.Nationality" class="control-label"></label>
						<select asp-for="@Model.Applicant.NationalityId" class="form-control"
								asp-items="@Model.NationalitiesList"
								data-native-nationality-id="@Model.NativeNationality.Id"></select>
						<span asp-validation-for="@Model.Applicant.NationalityId" class="text-danger"></span>
					</div>
					<div class="form-group" style="display: none;">
						<label asp-for="@Model.Applicant.ResidencePermit" class="control-label"></label>
						<select asp-for="@Model.Applicant.ResidencePermit" class="form-control"
								asp-items="Html.GetEnumSelectList<ResidencePermit>()"
								data-val-required-cond="Residence permit is mandatory when selected country is not Switzerland.">
							<option value="">(Please select)</option>
						</select>
						<span asp-validation-for="@Model.Applicant.ResidencePermit" class="text-danger"
							  id="residence-permit-error"></span>
					</div>
					<div class="form-group">
						<label asp-for="@Model.Applicant.Occupation" class="control-label"></label>
						<select asp-for="@Model.Applicant.Occupation" class="form-control"
								asp-items="Html.GetEnumSelectList<Occupation>()"></select>
						<span asp-validation-for="@Model.Applicant.Occupation" class="text-danger"></span>
					</div>
					<div class="form-group" style="display: none;">
						<label asp-for="@Model.Applicant.Employer" class="control-label"></label>
						<input asp-for="@Model.Applicant.Employer" class="form-control"
							   data-val-required-cond="Employer is mandatory when occupation is part or full time." />
						<span asp-validation-for="@Model.Applicant.Employer" class="text-danger"
							  id="employer-error"></span>
					</div>
					<div class="form-group" style="display: none;">
						<label asp-for="@Model.Applicant.CompanyName" class="control-label"></label>
						<input asp-for="@Model.Applicant.CompanyName" class="form-control"
							   data-val-required-cond="Company name is mandatory when occupation is self employed." />
						<span asp-validation-for="@Model.Applicant.CompanyName" class="text-danger"
							  id="company-name-error"></span>
					</div>
					<div class="form-group" style="display: none;">
						<label asp-for="@Model.Applicant.CompanyWebsite" class="control-label"></label>
						<input asp-for="@Model.Applicant.CompanyWebsite" class="form-control" />
						<span asp-validation-for="@Model.Applicant.CompanyWebsite" class="text-danger"></span>
					</div>
					<div class="form-group" style="display: none;">
						<label asp-for="@Model.OfficialFreelanceStatement" class="control-label"></label>
						<input asp-for="@Model.OfficialFreelanceStatement" class="form-control"
							   style="display: none;"
							   data-val-accepted-formats="Accepted formats: PDF, JPG, JPEG, TIFF, PNG, GIF" />
						<button type="button" data-input-file-id="@nameof(Model.OfficialFreelanceStatement)" class="btn btn-info btn-upload">Choose file</button>
						<p id="@nameof(Model.OfficialFreelanceStatement)_Info" class="help-block">Accepted formats: PDF, JPG, JPEG, TIFF, PNG, GIF</p>
						<span asp-validation-for="@Model.OfficialFreelanceStatement" class="text-danger"></span>
					</div>
				</div>
			</div>

			@* Miscellaneous Information *@
			<div class="panel panel-primary" id="miscellaneous-information">
				<div class="panel-heading">
					<h3 class="panel-title">Miscellaneous Information</h3>
				</div>
				<div class="panel-body">
					<label asp-for="@Model.Applicant.SpokenLanguages" class="control-label"></label>
					@foreach (var language in Model.SpokenLanguages)
					{
						<div class="form-group">
							<div class="checkbox">
								<label>
									<input type="checkbox" class="control-label"
										   name="spokenLanguages"
										   value="@language.Id"
										   @(language.IsChecked ? "checked" : "" ) />
									@language.Name
								</label>
							</div>
						</div>
					}
					<div class="form-group">
						<label asp-for="@Model.Applicant.TShirtSize" class="control-label"></label>
						<select asp-for="@Model.Applicant.TShirtSize" class="form-control"
								asp-items="Html.GetEnumSelectList<TShirtSize>()"></select>
						<span asp-validation-for="@Model.Applicant.TShirtSize" class="text-danger"></span>
					</div>
					<div class="form-group">
						<div class="checkbox">
							<label>
								<input asp-for="@Model.Applicant.DriverLicenseB" />
								@Html.DisplayNameFor(model => model.Applicant.DriverLicenseB)
							</label>
						</div>
					</div>
					<div class="form-group">
						<label asp-for="@Model.ProfilePicture" class="control-label"></label>
						<input asp-for="@Model.ProfilePicture" class="form-control" style="display: none;"
							   data-val-required-cond="Profile picture is mandatory."
							   data-val-accepted-formats="Accepted formats: JPG and JPEG" />
						<button type="button" data-input-file-id="@nameof(Model.ProfilePicture)" class="btn btn-info btn-upload">@Localizer["Choose file"]</button>
						<p id="@nameof(Model.ProfilePicture)_Info" class="help-block">@Localizer["Accepted formats: JPG and JPEG"]</p>
						<span asp-validation-for="@Model.ProfilePicture" class="text-danger"
							  id="profile-picture-error"></span>
					</div>
				</div>
			</div>

			@* J+S Training Certificates *@
			<div class="panel panel-primary" id="js-training-certificates">
				<div class="panel-heading">
					<h3 class="panel-title">J+S Training Certificates</h3>
				</div>
				<div class="panel-body">

					<div>
						<div class="form-group">
							<label asp-for="@Model.JsTrainingCertificate_1.Name" class="control-label"></label>
							<input asp-for="@Model.JsTrainingCertificate_1.Name" class="form-control" />
							<span asp-validation-for="@Model.JsTrainingCertificate_1.Name" class="text-danger"></span>
						</div>
						<div class="form-group">
							<label asp-for="@Model.JsTrainingCertificate_1.Type" class="control-label"></label>
							<select asp-for="@Model.JsTrainingCertificate_1.Type" class="form-control"
									asp-items="Html.GetEnumSelectList<JsCertificateType>()">
								<option value="">(Please select)</option>
							</select>
							<span asp-validation-for="@Model.JsTrainingCertificate_1.Type" class="text-danger"></span>
						</div>
					</div>

					<div id="additional-js-certificate-2" style="display: none;">
						<hr />
						<div class="form-group">
							<label asp-for="@Model.JsTrainingCertificate_2.Name" class="control-label"></label>
							<input asp-for="@Model.JsTrainingCertificate_2.Name" class="form-control" />
							<span asp-validation-for="@Model.JsTrainingCertificate_2.Name" class="text-danger"></span>
						</div>
						<div class="form-group">
							<label asp-for="@Model.JsTrainingCertificate_2.Type" class="control-label"></label>
							<select asp-for="@Model.JsTrainingCertificate_2.Type" class="form-control"
									asp-items="Html.GetEnumSelectList<JsCertificateType>()">
								<option value="">(Please select)</option>
							</select>
							<span asp-validation-for="@Model.JsTrainingCertificate_2.Type" class="text-danger"></span>
						</div>
					</div>

					<div id="additional-js-certificate-3" style="display: none;">
						<hr />
						<div class="form-group">
							<label asp-for="@Model.JsTrainingCertificate_3.Name" class="control-label"></label>
							<input asp-for="@Model.JsTrainingCertificate_3.Name" class="form-control" />
							<span asp-validation-for="@Model.JsTrainingCertificate_3.Name" class="text-danger"></span>
						</div>
						<div class="form-group">
							<label asp-for="@Model.JsTrainingCertificate_3.Type" class="control-label"></label>
							<select asp-for="@Model.JsTrainingCertificate_3.Type" class="form-control"
									asp-items="Html.GetEnumSelectList<JsCertificateType>()">
								<option value="">(Please select)</option>
							</select>
							<span asp-validation-for="@Model.JsTrainingCertificate_3.Type" class="text-danger"></span>
						</div>
					</div>

					<div id="additional-js-certificate-4" style="display: none;">
						<hr />
						<div class="form-group">
							<label asp-for="@Model.JsTrainingCertificate_4.Name" class="control-label"></label>
							<input asp-for="@Model.JsTrainingCertificate_4.Name" class="form-control" />
							<span asp-validation-for="@Model.JsTrainingCertificate_4.Name" class="text-danger"></span>
						</div>
						<div class="form-group">
							<label asp-for="@Model.JsTrainingCertificate_4.Type" class="control-label"></label>
							<select asp-for="@Model.JsTrainingCertificate_4.Type" class="form-control"
									asp-items="Html.GetEnumSelectList<JsCertificateType>()">
								<option value="">(Please select)</option>
							</select>
							<span asp-validation-for="@Model.JsTrainingCertificate_4.Type" class="text-danger"></span>
						</div>
					</div>

					<div id="additional-js-certificate-5" style="display: none;">
						<hr />
						<div class="form-group">
							<label asp-for="@Model.JsTrainingCertificate_5.Name" class="control-label"></label>
							<input asp-for="@Model.JsTrainingCertificate_5.Name" class="form-control" />
							<span asp-validation-for="@Model.JsTrainingCertificate_5.Name" class="text-danger"></span>
						</div>
						<div class="form-group">
							<label asp-for="@Model.JsTrainingCertificate_5.Type" class="control-label"></label>
							<select asp-for="@Model.JsTrainingCertificate_5.Type" class="form-control"
									asp-items="Html.GetEnumSelectList<JsCertificateType>()">
								<option value="">(Please select)</option>
							</select>
							<span asp-validation-for="@Model.JsTrainingCertificate_5.Type" class="text-danger"></span>
						</div>
					</div>

					<div class="form-group">
						<label asp-for="@Model.Applicant.TrainingNumber" class="control-label"></label>
						<input asp-for="@Model.Applicant.TrainingNumber" class="form-control" />
						<span asp-validation-for="@Model.Applicant.TrainingNumber" class="text-danger"></span>
					</div>
				</div>
			</div>

			@* Bank Data *@
			<div class="panel panel-primary" id="bank-data">
				<div class="panel-heading">
					<h3 class="panel-title">Bank Data</h3>
				</div>
				<div class="panel-body">
					<div class="form-group">
						<label asp-for="@Model.Applicant.IbanNumber" class="control-label"></label>
						<input asp-for="@Model.Applicant.IbanNumber" class="form-control"
							   type="number" />
						<span asp-validation-for="@Model.Applicant.IbanNumber" class="text-danger"></span>
					</div>
				</div>
			</div>

			@* Frame Contract *@
			<div class="panel panel-primary">
				<div class="panel-heading">
					<h3 class="panel-title">Frame Contract</h3>
				</div>
				<div class="panel-body">
					<textarea class="form-control terms-of-agreement" rows="6" readonly="readonly">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce vel ornare neque. Praesent mattis mi in ullamcorper rutrum. Proin ac urna tellus. In aliquam purus massa, vel euismod felis convallis et. Nam facilisis nulla ac euismod blandit. Proin cursus felis leo, at pretium ligula tempus ac. Praesent porta porttitor scelerisque. Sed mattis, dui interdum euismod ornare, velit mauris posuere elit, sit amet pulvinar turpis eros egestas sapien. Aenean dapibus urna velit, non feugiat elit congue id. Quisque cursus sodales erat, non finibus nisl elementum at. Nullam at commodo nibh, vitae mollis felis. Etiam erat nulla, vulputate vitae varius ut, eleifend id ex. Maecenas erat metus, elementum in interdum et, iaculis eu nulla. Vestibulum in velit arcu. Maecenas dapibus arcu non nulla scelerisque posuere. Donec metus turpis, consectetur vel vestibulum lacinia, iaculis ut tortor. Nulla neque mi, tincidunt sit amet ipsum vel, pharetra dignissim nunc. Ut sed neque eu purus tempor tincidunt sed nec nisl. Vestibulum interdum, ligula ut sagittis tempor, dolor mi finibus metus, in placerat magna lorem ut ipsum. Proin eleifend, neque a scelerisque malesuada, est lectus bibendum tellus, id euismod velit ante quis augue.
					</textarea>
					<div class="form-group">
						<div class="checkbox">
							<label>
								<input type="checkbox" id="terms" /> I accept the contractual terms
							</label>
						</div>
						<span id="terms-error" class="text-danger"></span>
					</div>
				</div>
			</div>

			<div class="form-group">
				<input type="submit" value="Submit" class="btn btn-primary pull-right" />
			</div>
		</form>
	</div>
</div>

@section Scripts {
	@{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
	<script src="~/lib/moment/moment.js"></script>
	<script>
		$(function () {

			// Check validation summary container
			(function() {
				var modelHasErrors = $("#validation-summary")
					.hasClass("validation-summary-errors");
				var valSummaryContainer = $("#validation-summary-container");
				if (modelHasErrors)
					valSummaryContainer.show();
				else
					valSummaryContainer.hide();
			}());


			// Initialize date-picker for the applicant's date of birth
			$("#ApplicantDateOfBirth").datepicker({
				dateFormat: "dd.mm.yy",
				changeMonth: true,
				changeYear: true,
				showButtonPanel: true,
				yearRange: "-100:+0"
			});


			// Make residence-permit visible if nationality isn't CH
			// and also, update its error message when left blank.
			function isNativeNationalitySelected() {
				var nationality = $("#Applicant_NationalityId");
				var nativeNationalityId = parseInt(nationality
					.data("native-nationality-id"));
				var selectedNationalityId = parseInt(
					nationality.children(":selected").val());

				return nativeNationalityId === selectedNationalityId;
			}
			$("#Applicant_NationalityId").on("change",
				function () {
					var residencePermitContainer =
						$("#Applicant_ResidencePermit").parent("div");
					if (!isNativeNationalitySelected())
						residencePermitContainer.show();
					else
						residencePermitContainer.hide();
				});
			$("#Applicant_ResidencePermit").on("change",
				function () {
					if (!isNativeNationalitySelected())
						updateErrorMessage($(this), "#residence-permit-error");
				});


			// Handle occupation selection change
			function isOccupationPartOrFullTimeSelected() {
				var occupationPartOrFulltime = [2, 3];
				var selectedOccupation = parseInt(
					$("#Applicant_Occupation option:selected").val());

				return occupationPartOrFulltime.includes(selectedOccupation);
			}
			function isOccupationSelfEmployedSelected() {
				var occupationSelfEmployed = 5;
				var selectedOccupation = parseInt(
					$("#Applicant_Occupation option:selected").val());

				return selectedOccupation === occupationSelfEmployed;
			}
			$("#Applicant_Occupation").on("change",
				function () {

					// Make employer field visible if the
					// occupation is part or full time.
					var employerContainer = $("#Applicant_Employer").parent("div");
					if (isOccupationPartOrFullTimeSelected())
						employerContainer.show();
					else
						employerContainer.hide();

					// Make company-name, company-website, and
					// official-freelance-statement visible
					// when occupation is, self-employed.
					var companyNameContainer = $("#Applicant_CompanyName").parent("div");
					var companyWebsiteContainer = $("#Applicant_CompanyWebsite").parent("div");
					var ofsContainer = $("#OfficialFreelanceStatement").parent("div");
					if (isOccupationSelfEmployedSelected()) {
						companyNameContainer.show();
						companyWebsiteContainer.show();
						ofsContainer.show();
					} else {
						companyNameContainer.hide();
						companyWebsiteContainer.hide();
						ofsContainer.hide();
					}
				});
			$("#Applicant_Employer").on("change",
				function () {
					if (isOccupationPartOrFullTimeSelected())
						updateErrorMessage($(this), "#employer-error");
				});
			$("#Applicant_CompanyName").on("change",
				function () {
					if (isOccupationSelfEmployedSelected())
						updateErrorMessage($(this), "#company-name-error");
				});


			// Handle input file uploads
			$(".btn-upload").on("click",
				function () {
					var inputFileId = "#" + $(this).data("input-file-id");
					$(inputFileId).click();
				});
			$("#OfficialFreelanceStatement").on("change",
				function () {
					var fileInput = $(this);
					var fileInfoText = fileInput.data("val-accepted-formats");
					var fileInfoId = "#" + fileInput.attr("id") + "_Info";

					if (isFieldEmpty(fileInput)) {
						$(fileInfoId).text(fileInfoText);
						return;
					}

					var validExtensions = [".pdf", ".jpg", ".jpeg", ".tiff", ".png", ".gif"];
					var fileName = getChosenFileName(fileInput.val());
					if (isFileExtensionValid(fileInput.val(), validExtensions)) {
						fileInfoText = "You've choosen file: " + fileName;
					} else {

						alert("Sorry, " + fileName + " is invalid, allowed extensions are: " +
							validExtensions.join(", "));

						// Reset file's value because no valid file format was provided.
						fileInput.val("");
					}

					$(fileInfoId).text(fileInfoText);
				});
			$("#ProfilePicture").on("change",
				function () {
					var fileInput = $(this);
					var fileInfoText = fileInput.data("val-accepted-formats");
					var fileInfoId = "#" + fileInput.attr("id") + "_Info";

					if (isFieldEmpty(fileInput)) {
						updateErrorMessage(fileInput, "#profile-picture-error");
						$(fileInfoId).text(fileInfoText);
						return;
					}

					var validExtensions = [".jpg", ".jpeg"];
					var fileName = getChosenFileName(fileInput.val());
					if (isFileExtensionValid(fileInput.val(), validExtensions)) {
						fileInfoText = "You've choosen file: " + fileName;
					} else {

						alert("Sorry, " + fileName + " is invalid! Allowed extensions are: " +
							validExtensions.join(", "));

						// Reset file's value because no valid file format was provided.
						fileInput.val("");
					}

					updateErrorMessage(fileInput, "#profile-picture-error");
					$(fileInfoId).text(fileInfoText);
				});


			// Handle displaying and hiding of additional js-certificates
			function handleShowingNextJsCertification(certificationIndex) {

				var index = certificationIndex;
				var currentCertName = "#JsTrainingCertificate_" + index + "_Name";
				var currentCertType = "#JsTrainingCertificate_" + index + "_Type";
				var nextCertContainer = "#additional-js-certificate-" + (index + 1);

				$(currentCertName).on("change",
					function () {
						var isNameValid = $(this).val().trim() !== "";
						var isTypeValid = $(currentCertType).val() !== "";
						if (isNameValid && isTypeValid) $(nextCertContainer).show();
					});

				$(currentCertType).on("change",
					function () {
						var isNameValid = $(currentCertName).val().trim() !== "";
						var isTypeValid = $(this).val() !== "";
						if (isNameValid && isTypeValid) {
							$(nextCertContainer).show();
						}
					});
			}
			handleShowingNextJsCertification(1);
			handleShowingNextJsCertification(2);
			handleShowingNextJsCertification(3);
			handleShowingNextJsCertification(4);


			// Check custom-clinet-side validations
			$("form#applicant-create-form").on("submit",
				function (event) {
					event.preventDefault();

					// Validate presence of residence-permit, if
					// selected nationality isn't Switzerland.
					if (!isNativeNationalitySelected()) {
						var residencePermit = $("#Applicant_ResidencePermit");
						updateErrorMessage(residencePermit, "#residence-permit-error");
						if (isFieldEmpty(residencePermit)) {
							scrollToError("#administrative-information");
							return;
						}
					}

					// Validate presence of the employer, if the
					// selected occupation is, part/full time.
					if (isOccupationPartOrFullTimeSelected()) {
						var employer = $("#Applicant_Employer");
						updateErrorMessage(employer, "#employer-error");
						if (isFieldEmpty(employer)) {
							scrollToError("#administrative-information");
							return;
						}
					}

					// Validate presence of company-name, when
					// selected occupation is self-employed.
					if (isOccupationSelfEmployedSelected()) {
						var companyName = $("#Applicant_CompanyName");
						updateErrorMessage(companyName, "#company-name-error");
						if (isFieldEmpty(companyName)) {
							scrollToError("#administrative-information");
							return;
						}
					}

					// Validate presence of the profile picture.
					var profilePicture = $("#ProfilePicture");
					if (isFieldEmpty(profilePicture)) {
						updateErrorMessage(profilePicture, "#profile-picture-error");
						scrollToError("#miscellaneous-information");
						return;
					}

					// Finally submit the form if terms are checked
					var areTermsChecked = $("#terms").prop("checked");
					$("#terms-error").text(!areTermsChecked ? "Please accept the contractual terms!" : "");
					if (areTermsChecked) {
						$("input[type=submit]").first().attr("disabled", true);
						$("form").off("submit").submit();
					}
				});
		});
	</script>
}
