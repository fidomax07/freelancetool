@using FreelanceTool.Models.Enums
@using Microsoft.AspNetCore.Builder
@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.AspNetCore.Localization
@using Microsoft.Extensions.Options

@inject IViewLocalizer Localizer
@inject IOptions<RequestLocalizationOptions> LocOptions
@model ApplicationCreateViewModel

@{
	ViewData["Title"] = Localizer["Main Title"];
	var requestCulture = Context.Features.Get<IRequestCultureFeature>();
	var currentCulture = requestCulture.RequestCulture.UICulture;
}

<h1>@Localizer["Main Title"]</h1>
<i class="divider-thick"></i>


<div class="row">
	<div class="col formcontainer">
		<form asp-action="Create" enctype="multipart/form-data" id="applicant-create-form">

			@* Validation errors summary *@
			<div class="panel panel-danger" id="validation-summary-container" style="display: none;">
				<div class="panel-heading">
					<h3 class="panel-title">Model errors</h3>
				</div>
				<div asp-validation-summary="All" class="panel-body text-danger" id="validation-summary"></div>
			</div>

			@* Personal Data *@
			<div class="panel panel-primary" id="personal-data">
				<div class="panel-heading">
					<h3 class="panel-title">@Localizer["Personal Data"]</h3>
				</div>
				<div class="panel-body">
					<div class="md-form selectbox">
						<label asp-for="@Model.Applicant.Sex"></label>
						<select asp-for="@Model.Applicant.Sex" class="mdb-select colorful-select dropdown-primary"
								asp-items="Html.GetEnumSelectList<Sex>()">
							<option value="">@Localizer["(Please select)"]</option>
						</select>
						<span asp-validation-for="@Model.Applicant.Sex" class="text-danger"></span>
					</div>
					<div class="md-form">
						<label asp-for="@Model.Applicant.LastName"></label>
						<input asp-for="@Model.Applicant.LastName" class="form-control" autocomplete="no-autocomplete"/>
						<span asp-validation-for="@Model.Applicant.LastName" class="text-danger"></span>
					</div>
					<div class="md-form">
						<label asp-for="@Model.Applicant.FirstName"></label>
						<input asp-for="@Model.Applicant.FirstName" class="form-control" autocomplete="no-autocomplete"/>
						<span asp-validation-for="@Model.Applicant.FirstName" class="text-danger"></span>
					</div>
					<div class="md-form">
						<label asp-for="@Model.ApplicantDateOfBirth"></label>
						<input asp-for="@Model.ApplicantDateOfBirth" class="form-control" autocomplete="no-autocomplete"/>
						<span asp-validation-for="@Model.ApplicantDateOfBirth" class="text-danger"></span>
					</div>
					<div class="md-form selectbox">
						<label asp-for="@Model.Applicant.MainLanguage"></label>
						<select asp-for="@Model.Applicant.LanguageId" class="mdb-select colorful-select dropdown-primary" asp-items="@Model.MainLanguageList"></select>
						<span asp-validation-for="@Model.Applicant.LanguageId" class="text-danger"></span>
					</div>
				</div>
			</div>

			@* Contact Data *@
			<div class="panel panel-primary" id="contact-data">
				<div class="panel-heading">
					<h3 class="panel-title">@Localizer["Contact Data"]</h3>
				</div>
				<div class="panel-body">
					<div class="row">
						<div class="col-12 col-sm-6 col-md-4">
							<div class="md-form selectbox">
								<label asp-for="@Model.Applicant.PhonePrefix"></label>
								<select asp-for="@Model.Applicant.PhonePrefix" class="mdb-select colorful-select dropdown-primary" asp-items="@Model.PhonePrefixesList">
									<option value="">@Localizer["(Please select)"]</option>
								</select>
								<span asp-validation-for="@Model.Applicant.PhonePrefix" class="text-danger"></span>
							</div>
						</div>
						<div class="col-6 col-md-8">
							<div class="md-form">
								<label asp-for="@Model.Applicant.PhoneNumber" class="control-label"></label>
								<input asp-for="@Model.Applicant.PhoneNumber" class="form-control" autocomplete="no-autocomplete" type="number" />
								<span asp-validation-for="@Model.Applicant.PhoneNumber" class="text-danger"></span>
							</div>
						</div>
					</div>
					<div class="md-form">
						<label asp-for="@Model.Applicant.Email" class="control-label"></label>
						<input asp-for="@Model.Applicant.Email" class="form-control" autocomplete="no-autocomplete" />
						<span asp-validation-for="@Model.Applicant.Email" class="text-danger"></span>
					</div>
				</div>
			</div>

			@* Address-Information *@
			<div class="panel panel-primary" id="address-information">
				<div class="panel-heading">
					<h3 class="panel-title">@Localizer["Address-Information"]</h3>
				</div>
				<div class="panel-body">
					<div class="md-form">
						<label asp-for="@Model.Applicant.Address" class="control-label"></label>
						<input asp-for="@Model.Applicant.Address" class="form-control" autocomplete="no-autocomplete" />
						<span asp-validation-for="@Model.Applicant.Address" class="text-danger"></span>
					</div>
					<div class="md-form">
						<label asp-for="@Model.Applicant.AddressInformation" class="control-label"></label>
						<input asp-for="@Model.Applicant.AddressInformation" class="form-control" autocomplete="no-autocomplete" />
						<span asp-validation-for="@Model.Applicant.AddressInformation" class="text-danger"></span>
					</div>
					<div class="row">
						<div class="col-12 col-sm-6 col-md-2">
							<div class="md-form">
								<label asp-for="@Model.Applicant.Zip" class="control-label"></label>
								<input asp-for="@Model.Applicant.Zip" class="form-control" type="number" autocomplete="no-autocomplete" />
								<span asp-validation-for="@Model.Applicant.Zip" class="text-danger"></span>
							</div>
						</div>
						<div class="col-6 col-md-10">
							<div class="md-form">
								<label asp-for="@Model.Applicant.City" class="control-label"></label>
								<input asp-for="@Model.Applicant.City" class="form-control" autocomplete="no-autocomplete" />
								<span asp-validation-for="@Model.Applicant.City" class="text-danger"></span>
							</div>
						</div>
					</div>
					<div class="md-form selectbox">
						<label asp-for="@Model.Applicant.Country" class="control-label"></label>
						<select asp-for="@Model.Applicant.Country" class="mdb-select colorful-select dropdown-primary" asp-items="Html.GetEnumSelectList<Country>()"></select>
						<span asp-validation-for="@Model.Applicant.Country" class="text-danger"></span>
					</div>
				</div>
			</div>

			@* Administrative Information *@
			<div class="panel panel-primary" id="administrative-information">
				<div class="panel-heading">
					<h3 class="panel-title">@Localizer["Administrative Information"]</h3>
				</div>
				<div class="panel-body">
					<div class="md-form">
						<label asp-for="@Model.Applicant.SwissSocialSecurityNumber" class="control-label"></label>
						<input asp-for="@Model.Applicant.SwissSocialSecurityNumber" class="form-control" autocomplete="no-autocomplete" />
						<span asp-validation-for="@Model.Applicant.SwissSocialSecurityNumber" class="text-danger"></span>
					</div>
					<div class="md-form selectbox">
						<label asp-for="@Model.Applicant.CivilStatus" class="control-label"></label>
						<select asp-for="@Model.Applicant.CivilStatus" class="mdb-select colorful-select dropdown-primary" asp-items="Html.GetEnumSelectList<CivilStatus>()">
							<option value="">@Localizer["(Please select)"]</option>
						</select>
						<span asp-validation-for="@Model.Applicant.CivilStatus" class="text-danger"></span>
					</div>
					<div class="md-form">
						<label asp-for="@Model.Applicant.ChildrenCount" class="control-label"></label>
						<input asp-for="@Model.Applicant.ChildrenCount" class="form-control" autocomplete="no-autocomplete" />
						<span asp-validation-for="@Model.Applicant.ChildrenCount" class="text-danger"></span>
					</div>
					<div class="md-form selectbox">
						<label asp-for="@Model.Applicant.Nationality" class="control-label"></label>
						<select asp-for="@Model.Applicant.NationalityId" class="mdb-select colorful-select dropdown-primary" 
						        asp-items="@Model.NationalitiesList" 
						        data-native-nationality-id="@Model.NativeNationality.Id">
							<option value="">@Localizer["(Please select)"]</option>
						</select>
						<span asp-validation-for="@Model.Applicant.NationalityId" class="text-danger"></span>
					</div>
					<div class="md-form selectbox" style="display: none;">
						<label asp-for="@Model.Applicant.ResidencePermit" class="control-label"></label>
						<select asp-for="@Model.Applicant.ResidencePermit" class="mdb-select colorful-select dropdown-primary" 
						        asp-items="Html.GetEnumSelectList<ResidencePermit>()" 
						        data-val-required-cond="@Localizer["Residence permit is required when selected country is not Switzerland."]">
							<option value="">@Localizer["(Please select)"]</option>
						</select>
						<span asp-validation-for="@Model.Applicant.ResidencePermit" class="text-danger" id="residence-permit-error"></span>
					</div>
					<div class="md-form selectbox">
						<label asp-for="@Model.Applicant.Occupation" class="control-label"></label>
						<select asp-for="@Model.Applicant.Occupation" class="mdb-select colorful-select dropdown-primary" asp-items="Html.GetEnumSelectList<Occupation>()">
							<option value="">@Localizer["(Please select)"]</option>
						</select>
						<span asp-validation-for="@Model.Applicant.Occupation" class="text-danger"></span>
					</div>
					<div class="md-form" style="display: none;">
						<label asp-for="@Model.Applicant.Employer" class="control-label"></label>
						<input asp-for="@Model.Applicant.Employer" class="form-control" autocomplete="no-autocomplete" 
						       data-val-required-cond="@Localizer["Employer is required when occupation is part or full-time."]" />
						<span asp-validation-for="@Model.Applicant.Employer" class="text-danger" id="employer-error"></span>
					</div>
					<div class="md-form" style="display: none;">
						<label asp-for="@Model.Applicant.CompanyName" class="control-label"></label>
						<input asp-for="@Model.Applicant.CompanyName" class="form-control" autocomplete="no-autocomplete" 
						       data-val-required-cond="@Localizer["Company name is required when occupation is self-employed."]" />
						<span asp-validation-for="@Model.Applicant.CompanyName" class="text-danger" id="company-name-error"></span>
					</div>
					<div class="md-form" style="display: none;">
						<label asp-for="@Model.Applicant.CompanyWebsite" class="control-label"></label>
						<input asp-for="@Model.Applicant.CompanyWebsite" class="form-control" autocomplete="no-autocomplete" />
						<span asp-validation-for="@Model.Applicant.CompanyWebsite" class="text-danger"></span>
					</div>
					<div class="md-form fileinput" style="display: none;">
						<label asp-for="@Model.OfficialFreelanceStatement" class="control-label"></label>
						<input asp-for="@Model.OfficialFreelanceStatement" class="form-control" style="display: none;" data-val-accepted-formats="@Localizer["Accepted formats: PDF, JPG, JPEG, TIFF, PNG, GIF"]" />
						<button type="button" data-input-file-id="@nameof(Model.OfficialFreelanceStatement)" class="btn btn-primary btn-upload">
							<i class="fa fa-file-pdf-o"></i>
							@Localizer["Choose file"]
						</button>
						<p id="@nameof(Model.OfficialFreelanceStatement)_Info" class="help-block">
							@Localizer["Accepted formats: PDF, JPG, JPEG, TIFF, PNG, GIF"]
						</p>
						<span asp-validation-for="@Model.OfficialFreelanceStatement" class="text-danger"></span>
					</div>
				</div>
			</div>

			@* Miscellaneous Information *@
			<div class="panel panel-primary" id="miscellaneous-information">
				<div class="panel-heading">
					<h3 class="panel-title">@Localizer["Miscellaneous Information"]</h3>
				</div>
				<div class="panel-body">
					<label class="control-label">@Localizer["Spoken Languages"]</label>
					<div class="md-form">
						@foreach (var language in Model.SpokenLanguages)
						{
							<div class="form-check">
								<input type="checkbox" class="form-check-input" name="spokenLanguages" id="laguagespoken-@language.Id" value="@language.Id" @(language.IsChecked ? "checked" : "" ) />
								<label class="form-check-label" for="laguagespoken-@language.Id">@language.Name</label>
							</div>
						}
					</div>
					<div class="md-form selectbox">
						<label asp-for="@Model.Applicant.TShirtSize" class="control-label"></label>
						<select asp-for="@Model.Applicant.TShirtSize" class="mdb-select colorful-select dropdown-primary" asp-items="Html.GetEnumSelectList<TShirtSize>()">
							<option value="">@Localizer["(Please select)"]</option>
						</select>
						<span asp-validation-for="@Model.Applicant.TShirtSize" class="text-danger"></span>
					</div>
					<label class="control-label">@Localizer["Drivers License Type"]</label>
					<div class="md-form">
						<div class="form-check">
							<input class="form-check-input" asp-for="@Model.Applicant.DriverLicenseB" />
							<label asp-for="@Model.Applicant.DriverLicenseB">@Html.DisplayNameFor(model => model.Applicant.DriverLicenseB)</label>
						</div>
					</div>
					<div class="md-form fileinput">
						<label asp-for="@Model.ProfilePicture" class="control-label"></label>
						<input asp-for="@Model.ProfilePicture" class="form-control" style="display: none;" data-val-required-cond="@Localizer["Profile picture is mandatory."]" data-val-accepted-formats="@Localizer["Accepted formats: JPG and JPEG"]" />
						<button type="button" data-input-file-id="@nameof(Model.ProfilePicture)" class="btn btn-info btn-upload">
							<i class="fa fa-image"></i>
							@Localizer["Choose file"]
						</button>
						<p id="@nameof(Model.ProfilePicture)_Info" class="help-block">
							@Localizer["Accepted formats: JPG and JPEG"]
						</p>
						<span asp-validation-for="@Model.ProfilePicture" class="text-danger" id="profile-picture-error"></span>
					</div>
				</div>
			</div>

			@* J+S Training Certificates *@
			<div class="panel panel-primary" id="js-training-certificates">
				<div class="panel-heading">
					<h3 class="panel-title">@Localizer["J+S Training Certificates"]</h3>
				</div>
				<div class="panel-body">
					<div>
						<div class="md-form">
							<label asp-for="@Model.JsTrainingCertificate_1.Name"></label>
							<input asp-for="@Model.JsTrainingCertificate_1.Name" class="form-control" autocomplete="no-autocomplete" data-val-required-cond="@Localizer["JS Training Name is required if JS Training Type is not empty."]" />
							<span asp-validation-for="@Model.JsTrainingCertificate_1.Name" class="text-danger" id="js-certificate-1-name-error"></span>
						</div>
						<div class="md-form selectbox">
							<label asp-for="@Model.JsTrainingCertificate_1.Type"></label>
							<select asp-for="@Model.JsTrainingCertificate_1.Type" class="mdb-select colorful-select dropdown-primary" asp-items="Html.GetEnumSelectList<JsCertificateType>()" data-val-required-cond="@Localizer["JS Training Type is required if JS Training Name is not empty."]">
								<option value="">@Localizer["(Please select)"]</option>
							</select>
							<span asp-validation-for="@Model.JsTrainingCertificate_1.Type" class="text-danger" id="js-certificate-1-type-error"></span>
						</div>
					</div>

					<div id="additional-js-certificate-2" style="display: none;">
						<hr />
						<div class="md-form">
							<label asp-for="@Model.JsTrainingCertificate_2.Name"></label>
							<input asp-for="@Model.JsTrainingCertificate_2.Name" class="form-control" autocomplete="no-autocomplete" data-val-required-cond="@Localizer["JS Training Name is required if JS Training Type is not empty."]" />
							<span asp-validation-for="@Model.JsTrainingCertificate_2.Name" class="text-danger" id="js-certificate-2-name-error"></span>
						</div>
						<div class="md-form selectbox">
							<label asp-for="@Model.JsTrainingCertificate_2.Type"></label>
							<select asp-for="@Model.JsTrainingCertificate_2.Type" class="mdb-select colorful-select dropdown-primary" asp-items="Html.GetEnumSelectList<JsCertificateType>()" data-val-required-cond="@Localizer["JS Training Type is required if JS Training Name is not empty."]">
								<option value="">@Localizer["(Please select)"]</option>
							</select>
							<span asp-validation-for="@Model.JsTrainingCertificate_2.Type" class="text-danger" id="js-certificate-2-type-error"></span>
						</div>
					</div>

					<div id="additional-js-certificate-3" style="display: none;">
						<hr />
						<div class="md-form">
							<label asp-for="@Model.JsTrainingCertificate_3.Name"></label>
							<input asp-for="@Model.JsTrainingCertificate_3.Name" class="form-control" autocomplete="no-autocomplete" data-val-required-cond="@Localizer["JS Training Name is required if JS Training Type is not empty."]" />
							<span asp-validation-for="@Model.JsTrainingCertificate_3.Name" class="text-danger" id="js-certificate-3-name-error"></span>
						</div>
						<div class="md-form selectbox">
							<label asp-for="@Model.JsTrainingCertificate_3.Type"></label>
							<select asp-for="@Model.JsTrainingCertificate_3.Type" class="mdb-select colorful-select dropdown-primary" asp-items="Html.GetEnumSelectList<JsCertificateType>()" data-val-required-cond="@Localizer["JS Training Type is required if JS Training Name is not empty."]">
								<option value="">@Localizer["(Please select)"]</option>
							</select>
							<span asp-validation-for="@Model.JsTrainingCertificate_3.Type" class="text-danger" id="js-certificate-3-type-error"></span>
						</div>
					</div>

					<div id="additional-js-certificate-4" style="display: none;">
						<hr />
						<div class="md-form">
							<label asp-for="@Model.JsTrainingCertificate_4.Name"></label>
							<input asp-for="@Model.JsTrainingCertificate_4.Name" class="form-control" autocomplete="no-autocomplete" data-val-required-cond="@Localizer["JS Training Name is required if JS Training Type is not empty."]" />
							<span asp-validation-for="@Model.JsTrainingCertificate_4.Name" class="text-danger" id="js-certificate-4-name-error"></span>
						</div>
						<div class="md-form selectbox">
							<label asp-for="@Model.JsTrainingCertificate_4.Type"></label>
							<select asp-for="@Model.JsTrainingCertificate_4.Type" class="mdb-select colorful-select dropdown-primary" asp-items="Html.GetEnumSelectList<JsCertificateType>()" data-val-required-cond="@Localizer["JS Training Type is required if JS Training Name is not empty."]">
								<option value="">@Localizer["(Please select)"]</option>
							</select>
							<span asp-validation-for="@Model.JsTrainingCertificate_4.Type" class="text-danger" id="js-certificate-4-type-error"></span>
						</div>
					</div>

					<div id="additional-js-certificate-5" style="display: none;">
						<hr />
						<div class="md-form">
							<label asp-for="@Model.JsTrainingCertificate_5.Name"></label>
							<input asp-for="@Model.JsTrainingCertificate_5.Name" class="form-control" autocomplete="no-autocomplete" data-val-required-cond="@Localizer["JS Training Name is required if JS Training Type is not empty."]" />
							<span asp-validation-for="@Model.JsTrainingCertificate_5.Name" class="text-danger" id="js-certificate-5-name-error"></span>
						</div>
						<div class="md-form selectbox">
							<label asp-for="@Model.JsTrainingCertificate_5.Type"></label>
							<select asp-for="@Model.JsTrainingCertificate_5.Type" class="mdb-select colorful-select dropdown-primary" asp-items="Html.GetEnumSelectList<JsCertificateType>()" data-val-required-cond="@Localizer["JS Training Type is required if JS Training Name is not empty."]">
								<option value="">@Localizer["(Please select)"]</option>
							</select>
							<span asp-validation-for="@Model.JsTrainingCertificate_5.Type" class="text-danger" id="js-certificate-5-type-error"></span>
						</div>
					</div>

					<div class="md-form">
						<label asp-for="@Model.Applicant.TrainingNumber"></label>
						<input asp-for="@Model.Applicant.TrainingNumber" class="form-control" autocomplete="no-autocomplete" />
						<span asp-validation-for="@Model.Applicant.TrainingNumber" class="text-danger"></span>
					</div>
				</div>
			</div>

			@* Bank Data *@
			<div class="panel panel-primary" id="bank-data">
				<div class="panel-heading">
					<h3 class="panel-title">@Localizer["Bank Data"]</h3>
				</div>
				<div class="md-form">
					<label asp-for="@Model.Applicant.IbanNumber"></label>
					<input asp-for="@Model.Applicant.IbanNumber" class="form-control" autocomplete="no-autocomplete" />
					<span asp-validation-for="@Model.Applicant.IbanNumber" class="text-danger"></span>
				</div>
			</div>

			@* Frame Contract *@
			<div class="panel panel-primary">
				<div class="panel-heading">
					<h3 class="panel-title">@Localizer["Frame Contract"]</h3>
				</div>
				<div class="md-form">
					<div class="terms">
						<p>@Localizer["Frame Contract Text"]</p>
					</div>
				</div>
				<div class="md-form">
					<div class="form-check">
						<input type="checkbox" class="form-check-input" id="terms"
						       data-val-required="@Localizer["Please accept the contractual terms!"]">
						<label class="form-check-label" for="terms">@Localizer["I accept the contractual terms"]</label>
						<span id="terms-error" class="text-danger"></span>
					</div>
				</div>
			</div>

			<div class="md-form" style="text-align: right;">
				<button type="button" class="btn btn-info btn-upload submit">
					@Localizer["Submit"]
				</button>
			</div>
		</form>
	</div>
</div>

@section Scripts {
	@{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
	<script src="~/lib/moment/moment.js"></script>
	<script>
		$(function () {

			// Check validation summary container
			(function () {
				var modelHasErrors = $("#validation-summary")
					.hasClass("validation-summary-errors");
				var valSummaryContainer = $("#validation-summary-container");
				if (modelHasErrors)
					valSummaryContainer.show();
				else
					valSummaryContainer.hide();
			}());

			// Data Picker Initialization
			/*
			var birthdayselector = $('#ApplicantDateOfBirth').pickadate({
				formatSubmit: 'dd.mm.yyyy',
				format: 'dd.mm.yyyy',
				firstDay: 1
			});
			*/
			/*
			$("#ApplicantDateOfBirth").datepicker({
				dateFormat: "dd.mm.yy",
				changeMonth: true,
				changeYear: true,
				showButtonPanel: true,
				yearRange: "-100:+0",
				firstDay: 1,
				defaultDate: "-20y"
			});
			*/

			// Make residence-permit visible if nationality isn't CH
			// and also, update its error message when left blank.
			function isNativeNationalitySelected() {
				var nationality = $("#Applicant_NationalityId");
				var nativeNationalityId = parseInt(nationality
					.data("native-nationality-id"));
				var selectedNationalityId = parseInt(
					nationality.children(":selected").val());

				return nativeNationalityId === selectedNationalityId;
			}
			$("#Applicant_NationalityId").on("change",
				function () {
					var residencePermitContainer =
						$("#Applicant_ResidencePermit").closest("div.selectbox");
					if (!isNativeNationalitySelected())
						residencePermitContainer.show(); 
					else
						residencePermitContainer.hide();
				});
			$("#Applicant_ResidencePermit").on("change",
				function () {
					if (!isNativeNationalitySelected())
						updateErrorMessage($(this), "#residence-permit-error");
				});


			// Handle occupation selection change
			function isOccupationPartOrFullTimeSelected() {
				var occupationPartOrFulltime = [2, 3];
				var selectedOccupation = parseInt(
					$("#Applicant_Occupation option:selected").val());

				return occupationPartOrFulltime.includes(selectedOccupation);
			}
			function isOccupationSelfEmployedSelected() {
				var occupationSelfEmployed = 5;
				var selectedOccupation = parseInt(
					$("#Applicant_Occupation option:selected").val());

				return selectedOccupation === occupationSelfEmployed;
			}
			$("#Applicant_Occupation").on("change",
				function () {

					// Make employer field visible if the
					// occupation is part or full time.
					var employerContainer = $("#Applicant_Employer").parent("div");
					if (isOccupationPartOrFullTimeSelected())
						employerContainer.show();
					else
						employerContainer.hide();

					// Make company-name, company-website, and
					// official-freelance-statement visible
					// when occupation is, self-employed.
					var companyNameContainer = $("#Applicant_CompanyName").parent("div");
					var companyWebsiteContainer = $("#Applicant_CompanyWebsite").parent("div");
					var ofsContainer = $("#OfficialFreelanceStatement").parent("div");
					if (isOccupationSelfEmployedSelected()) {
						companyNameContainer.show();
						companyWebsiteContainer.show();
						ofsContainer.show();
					} else {
						companyNameContainer.hide();
						companyWebsiteContainer.hide();
						ofsContainer.hide();
					}
				});
			$("#Applicant_Employer").on("change",
				function () {
					if (isOccupationPartOrFullTimeSelected())
						updateErrorMessage($(this), "#employer-error");
				});
			$("#Applicant_CompanyName").on("change",
				function () {
					if (isOccupationSelfEmployedSelected())
						updateErrorMessage($(this), "#company-name-error");
				});


			// Handle input file uploads
			$(".btn-upload").on("click",
				function () {
					var inputFileId = "#" + $(this).data("input-file-id");
					$(inputFileId).click();
				});
			$("#OfficialFreelanceStatement").on("change",
				function () {
					var fileInput = $(this);
					var fileInfoText = fileInput.data("val-accepted-formats");
					var fileInfoId = "#" + fileInput.attr("id") + "_Info";

					if (isFieldEmpty(fileInput)) {
						$(fileInfoId).text(fileInfoText);
						return;
					}

					var validExtensions = [".pdf", ".jpg", ".jpeg", ".tiff", ".png", ".gif"];
					var fileName = getChosenFileName(fileInput.val());
					if (isFileExtensionValid(fileInput.val(), validExtensions)) {
						fileInfoText = "You've choosen file: " + fileName;
					} else {

						alert("Sorry, " + fileName + " is invalid, allowed extensions are: " +
							validExtensions.join(", "));

						// Reset file's value because no valid file format was provided.
						fileInput.val("");
					}

					$(fileInfoId).text(fileInfoText);
				});
			$("#ProfilePicture").on("change",
				function () {
					var fileInput = $(this);
					var fileInfoText = fileInput.data("val-accepted-formats");
					var fileInfoId = "#" + fileInput.attr("id") + "_Info";

					if (isFieldEmpty(fileInput)) {
						updateErrorMessage(fileInput, "#profile-picture-error");
						$(fileInfoId).text(fileInfoText);
						return;
					}

					var validExtensions = [".jpg", ".jpeg"];
					var fileName = getChosenFileName(fileInput.val());
					if (isFileExtensionValid(fileInput.val(), validExtensions)) {
						fileInfoText = "You've choosen file: " + fileName;
					} else {

						alert("Sorry, " + fileName + " is invalid! Allowed extensions are: " +
							validExtensions.join(", "));

						// Reset file's value because no valid file format was provided.
						fileInput.val("");
					}

					updateErrorMessage(fileInput, "#profile-picture-error");
					$(fileInfoId).text(fileInfoText);
				});


			// Handle displaying of additional JS Training
			// Certificates, and conditional validation.
			function areJSCertificatesValid() {
				for (var i = 1; i <= 5; i++)
					if (!isJSCertificateValid(i)) return false;

				return true;
			}
			function isJSCertificateValid(certificationIndex) {

				var index = certificationIndex;

				var certName = $("#JsTrainingCertificate_" + index + "_Name");
				var certType = $("#JsTrainingCertificate_" + index + "_Type");
				var certNameErrorId = "#js-certificate-" + index + "-name-error";
				var certTypeErrorId = "#js-certificate-" + index + "-type-error";

				var isValid = false;
				var isEmpty = isFieldEmpty(certName) && isFieldEmpty(certType);
				var isFilled = !isFieldEmpty(certName) && !isFieldEmpty(certType);
				if (isEmpty || isFilled) {
					isValid = true;
					clearJsCertificateError(certNameErrorId);
					clearJsCertificateError(certTypeErrorId);
				}
				else if (!isFieldEmpty(certName) && isFieldEmpty(certType)) {
					isValid = false;
					clearJsCertificateError(certNameErrorId);
					updateErrorMessage(certType, certTypeErrorId);
					scrollToError("#js-training-certificates");
				}
				else if (!isFieldEmpty(certType) && isFieldEmpty(certName)) {
					isValid = false;
					clearJsCertificateError(certTypeErrorId);
					updateErrorMessage(certName, certNameErrorId);
					scrollToError("#js-training-certificates");
				}

				return isValid;
			}
			function clearJsCertificateError(errorSpanId) {
				$(errorSpanId).text("");
			}
			function handleShowingNextJsCertification(certificationIndex) {

				var index = certificationIndex;
				var certName = $("#JsTrainingCertificate_" + index + "_Name");
				var certType = $("#JsTrainingCertificate_" + index + "_Type");
				var nextCertContainer = "#additional-js-certificate-" + (index + 1);

				certName.on("change",
					function () {
						if (!isFieldEmpty(certName) && !isFieldEmpty(certType))
							$(nextCertContainer).show();
					});

				certType.on("change",
					function () {
						if (!isFieldEmpty(certName) && !isFieldEmpty(certType)) {
							$(nextCertContainer).show();
						}
					});
			}
			handleShowingNextJsCertification(1);
			handleShowingNextJsCertification(2);
			handleShowingNextJsCertification(3);
			handleShowingNextJsCertification(4);


			// Check custom-clinet-side validations
			var createForm = $("form#applicant-create-form");
			createForm.on("submit",
				function (event) {
					event.preventDefault();

					// Validate presence of residence-permit, if
					// selected nationality isn't Switzerland.
					if (!isNativeNationalitySelected()) {
						var residencePermit = $("#Applicant_ResidencePermit");
						updateErrorMessage(residencePermit, "#residence-permit-error");
						if (isFieldEmpty(residencePermit)) {
							scrollToError("#administrative-information");
							return;
						}
					}

					// Validate presence of the employer, if the
					// selected occupation is, part/full time.
					if (isOccupationPartOrFullTimeSelected()) {
						var employer = $("#Applicant_Employer");
						updateErrorMessage(employer, "#employer-error");
						if (isFieldEmpty(employer)) {
							scrollToError("#administrative-information");
							return;
						}
					}

					// Validate presence of company-name, when
					// selected occupation is self-employed.
					if (isOccupationSelfEmployedSelected()) {
						var companyName = $("#Applicant_CompanyName");
						updateErrorMessage(companyName, "#company-name-error");
						if (isFieldEmpty(companyName)) {
							scrollToError("#administrative-information");
							return;
						}
					}

					// Validate presence of the profile picture.
					var profilePicture = $("#ProfilePicture");
					if (isFieldEmpty(profilePicture)) {
						updateErrorMessage(profilePicture, "#profile-picture-error");
						scrollToError("#miscellaneous-information");
						return;
					}

					// Validate JSTrainingCertificates
					if (!areJSCertificatesValid()) return;

					// Finally submit the form if terms are checked
					var termsInput = $("#terms");
					var areTermsChecked = termsInput.prop("checked");
					$("#terms-error").text(!areTermsChecked ?
						termsInput.data("val-required") : "");
					if (areTermsChecked) {
						$("input[type=submit]").first().attr("disabled", true);
						createForm.off("submit").submit();
					}
				});

			// Add Submit to End-Button
			$("button.submit").bind("click", function () {
				createForm.submit();
			});
		});
	</script>
}
